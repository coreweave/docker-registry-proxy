---
# This file was originally generated by a template in:
# https://github.com/coreweave/k8s-infrastructure-ansible/blob/master/roles/administrative_tasks/templates/new_zone/values-base-storage.yaml.j2
clusterSpec:
  zone: dev1a
  apiserver:
    addtlUrl: k8s.storage.dev1a.int.coreweave.com
    ip: 10.232.128.13
    url: k8s.storage.dev1a.int.coreweave.com
  coreDnsIp: 10.238.0.3
  networkAllocations:
    asNumber: "64321"
    podCIDRs: ["10.238.64.0/18"]
    serviceCIDRs: ["10.238.0.0/18"]
    internalLbCIDRs:
      default: "10.238.128.0/18"
    externalLbCIDRs: ~

argocd:
  targetClusterURL: https://10.232.128.13

applications:
  calico:
    valuesMerge:
      typha:
        enabled: false # Disable typha since these clusters are small and don't need the extra overhead

  control-plane:
    valuesMerge:
      coreweave:
        clusterSecretStores:
          control-plane-storage-cluster:
            config: dev
            project: dev-cluster
          generic-pull-secrets-storage-cluster:
            config: dev
        externalSecrets:
          k8s-ca:
            secretStoreName: control-plane-storage-cluster
            target:
              template:
                type: kubernetes.io/tls
            dataFrom:
              - find:
                  name:
                    regexp: "DEV1A_STORAGE_CA_CRT_64"
                  decodingStrategy: Auto
                rewrite:
                  - regexp:
                      source: "(.*)"
                      target: "ca.crt"
              - find:
                  name:
                    regexp: "DEV1A_STORAGE_K8S_CA_CERT_64"
                  decodingStrategy: Auto
                rewrite:
                  - regexp:
                      source: "(.*)"
                      target: "tls.crt"
              - find:
                  name:
                    regexp: "DEV1A_STORAGE_K8S_CA_KEY_64"
                  decodingStrategy: Auto
                rewrite:
                  - regexp:
                      source: "(.*)"
                      target: "tls.key"
      kubeception:
        apiserver:
          service:
            loadBalancerIP: 10.232.128.13
      pki:
        apiServer:
          ipSans:
            - 127.0.0.1
            - 10.232.128.13
            - 10.238.0.1
  coredns:
    valuesMerge:
      apiServerURL: k8s.storage.dev1a.int.coreweave.com:6443
      config: |
        .:53 {
            log . {
                class error
            }
            errors
            health
            ready
            kubernetes cluster.local dev.storage.k8s in-addr.arpa {
              pods insecure
              kubeconfig /etc/kubernetes/kubeconfig local
              fallthrough in-addr.arpa
            }
            k8s_external dev1a.storage.k8s {
            }
            prometheus :9153
            forward . 10.100.1.1 {
              prefer_udp
            }
            cache 3600 {
              success 39936
              denial 39936
            }
            loop
            reload
            loadbalance
        }
  cw-node-controller:
    valuesMerge:
      nodeLifeCycle:
        applyTaints: false
  in-cluster-config:
    valuesMerge:
      clusterInfo:
        certificateAuthorityData: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV3ekNDQTZ1Z0F3SUJBZ0lVTGlvdzcxWjVzLzNlSUVwd2NrYzVUTVYxTkFrd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daQXhDekFKQmdOVkJBWVRBbFZUTVFzd0NRWURWUVFJREFKT1dURVJNQThHQTFVRUJ3d0lUbVYzSUZsdgpjbXN4RWpBUUJnTlZCQW9NQ1VOdmNtVlhaV0YyWlRFV01CUUdBMVVFQ3d3TlpHVjJNV0V0YzNSdmNtRm5aVEVUCk1CRUdBMVVFQXd3S1MzVmlaWEp1WlhSbGN6RWdNQjRHQ1NxR1NJYjNEUUVKQVJZUmIzQnpRR052Y21WM1pXRjIKWlM1amIyMHdIaGNOTWpReE1qRXdNVFkwTlRJeFdoY05NelF4TWpBNE1UWTBOVEl4V2pDQmtERUxNQWtHQTFVRQpCaE1DVlZNeEN6QUpCZ05WQkFnTUFrNVpNUkV3RHdZRFZRUUhEQWhPWlhjZ1dXOXlhekVTTUJBR0ExVUVDZ3dKClEyOXlaVmRsWVhabE1SWXdGQVlEVlFRTERBMWtaWFl4WVMxemRHOXlZV2RsTVJNd0VRWURWUVFEREFwTGRXSmwKY201bGRHVnpNU0F3SGdZSktvWklodmNOQVFrQkZoRnZjSE5BWTI5eVpYZGxZWFpsTG1OdmJUQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFONG8zcFl0YmJ6WjlSUDc5ZWZVN2FSMkFPNUZ2WlU4CnJqSmNYSm1qc1lqVjhCVHhhS1ZIVmoxcEpybHljdnpoTUo2bTByOG4xbWVQa1pudThYcWkwRitCZytGaXdyNGwKTjF3V3JWamtjZlhLZGEybkVucGtLZ01LNVpwcnpNYmJjMGtZUm4xcU5rODcvbzhhR1BwSTJUTkN6L2tielhMMQpGTlFyeTV0QW9LN0tMMVE3aWxUbnlndmM2aXJSMEFKTGVkRm1XUUJqcVJGRERCKzJKQVRPUm9FY09Vd3puQ3ZRCk1JUW9FMDBwRXVyY01sR3hucDA2WG5GNEowbXRpMEJObHA1YmJXVDhza0ttN1lBUUN2N0lWWlNZQlpnZjhVa0kKWDZzVm41R3hndGxLbUkzazRaU3l0Znk4Uis4bGlmaUVzNjhOVW8zT1pEVnV5ZkpyeEQzbGZZa0NBd0VBQWFPQwpBUkV3Z2dFTk1Bd0dBMVVkRXdRRk1BTUJBZjh3Q3dZRFZSMFBCQVFEQWdHbU1CMEdBMVVkRGdRV0JCVHVTWmNxCkF1VHhYV3ZzeExnREF6cVludVowS1RDQjBBWURWUjBqQklISU1JSEZnQlR1U1pjcUF1VHhYV3ZzeExnREF6cVkKbnVaMEthR0JscVNCa3pDQmtERUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdNQWs1Wk1SRXdEd1lEVlFRSApEQWhPWlhjZ1dXOXlhekVTTUJBR0ExVUVDZ3dKUTI5eVpWZGxZWFpsTVJZd0ZBWURWUVFMREExa1pYWXhZUzF6CmRHOXlZV2RsTVJNd0VRWURWUVFEREFwTGRXSmxjbTVsZEdWek1TQXdIZ1lKS29aSWh2Y05BUWtCRmhGdmNITkEKWTI5eVpYZGxZWFpsTG1OdmJZSVVMaW93NzFaNXMvM2VJRXB3Y2tjNVRNVjFOQWt3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEVDFkd0lhQ093aDl6NXZzcHQ5akZ3di94cVFBckh0MFN1MGZGakVwakVHZyt5ZnBjTkN3dE5qCmVqRTAzUlZMMnB0akVrbTk2eG85VGIwenQ0SFZnYnBZL3UwSk02MURCSjJwRDBWN1VYbnVYcEg1eTduV1g3czAKMUNjWnJJcjVpL3VHbU5TTVpwY3dtSVI2cysvb2IrZmt1ejNoZDZ6bEZrNXVTamJrS2JXTUIxbnNIR0hCSXJ4cgpWRGFMNlYxK0Qzc1laT21sTkRnd1h5NTdpWGpoZ0I3NzZWSU9zU3gzVkRMaGx6L2VyeVZsQi9FaU5HbW83bFhSCjB5VklDZGZiL2NzUzFNRU04cWxzZ1FxOTB4aTNXQ3orSVJLV2pYOTNqVDJreGpHYy9IazN4enJudDVZUWFvbFQKM2ljTTErRHJhZXNKdWhRN3Y5NW5HdE1Zc1dtNmh4cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      kubeletConfigOverrides:
        maxPods: 256
  jwks-auth-push:
    enabled: true
  regproxy:
    enabled: false  # Is this really needed in a storage cluster?
    valuesMerge:
      regproxy:
        dev: true

  metrics:
    valuesMerge:
      portkey:
        monitor:
          enabled: false
      ufm:
        monitor:
          enabled: false
  node-local-dns:
    valuesMerge:
      service:
        type: LoadBalancer
        loadBalancerIP: "10.238.128.51"  # Required for vRouter DNS access
